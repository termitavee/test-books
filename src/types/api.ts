interface IBook {
  key: string;
  text: string[];
  type: string;
  seed: string[];
  title: string;
  title_suggest: string;
  has_fulltext: boolean;
  edition_count: number;
  edition_key?: string[];
  publish_date?: string[];
  publish_year?: number[];
  first_publish_year?: number;
  lccn?: string[];
  publish_place?: string[];
  oclc?: string[];
  contributor?: string[];
  lcc?: string[];
  ddc?: string[];
  isbn?: string[];
  last_modified_i: number;
  ebook_count_i: number;
  ia?: string[];
  public_scan_b?: false;
  ia_collection_s?: string;
  lending_edition_s?: string;
  lending_identifier_s?: string;
  printdisabled_s?: string;
  cover_edition_key?: string;
  cover_i?: number;
  publisher?: string[];
  language?: string[];
  author_key: string[];
  author_name: string[];
  author_alternative_name?: string[];
  person?: string[];
  place?: string[];
  subject?: string[];
  time?: string[];
  id_alibris_id?: string[];
  id_amazon?: string[];
  id_canadian_national_library_archive?: string[];
  'id_dep\u00f3sito_legal'?: string[];
  id_goodreads?: string[];
  id_google?: string[];
  id_librarything?: string[];
  id_overdrive?: string[];
  id_paperback_swap?: string[];
  id_wikidata?: string[];
  ia_loaded_id?: string[];
  ia_box_id?: string[];
  publisher_facet?: string[];
  person_key?: string[];
  time_facet?: string[];
  place_key?: string[];
  person_facet?: string[];
  subject_facet?: string[];
  _version_: number;
  lcc_sort?: string;
  author_facet: string[];
  subject_key?: string[];
  time_key?: string[];
  ddc_sort?: string;
}

interface IResponse<itemType = IBook> {
  numFound: number;
  start: number;
  numFoundExact: boolean;
  num_found: number;
  docs: itemType;
  q: string;
  offset: null;
}
